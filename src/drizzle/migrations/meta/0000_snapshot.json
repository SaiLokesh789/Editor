{
  "id": "037bbdd7-d169-4ed0-b5cb-c2f7d720e7e9",
  "prevId": "00000000-0000-0000-0000-000000000000",
  "version": "7",
  "dialect": "postgresql",
  "tables": {
    "public.contest_participants": {
      "name": "contest_participants",
      "schema": "",
      "columns": {
        "contestId": {
          "name": "contestId",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "userId": {
          "name": "userId",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "joinedAt": {
          "name": "joinedAt",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        }
      },
      "indexes": {},
      "foreignKeys": {
        "contest_participants_contestId_contest_id_fk": {
          "name": "contest_participants_contestId_contest_id_fk",
          "tableFrom": "contest_participants",
          "tableTo": "contest",
          "columnsFrom": [
            "contestId"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        },
        "contest_participants_userId_users_id_fk": {
          "name": "contest_participants_userId_users_id_fk",
          "tableFrom": "contest_participants",
          "tableTo": "users",
          "columnsFrom": [
            "userId"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {
        "contest_participants_contestId_userId_pk": {
          "name": "contest_participants_contestId_userId_pk",
          "columns": [
            "contestId",
            "userId"
          ]
        }
      },
      "uniqueConstraints": {},
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.contest_problems": {
      "name": "contest_problems",
      "schema": "",
      "columns": {
        "contestId": {
          "name": "contestId",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "problemId": {
          "name": "problemId",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "addedAt": {
          "name": "addedAt",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        }
      },
      "indexes": {},
      "foreignKeys": {
        "contest_problems_contestId_contest_id_fk": {
          "name": "contest_problems_contestId_contest_id_fk",
          "tableFrom": "contest_problems",
          "tableTo": "contest",
          "columnsFrom": [
            "contestId"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        },
        "contest_problems_problemId_problem_id_fk": {
          "name": "contest_problems_problemId_problem_id_fk",
          "tableFrom": "contest_problems",
          "tableTo": "problem",
          "columnsFrom": [
            "problemId"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {
        "contest_problems_contestId_problemId_pk": {
          "name": "contest_problems_contestId_problemId_pk",
          "columns": [
            "contestId",
            "problemId"
          ]
        }
      },
      "uniqueConstraints": {},
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.contest": {
      "name": "contest",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "gen_random_uuid()"
        },
        "name": {
          "name": "name",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "startTime": {
          "name": "startTime",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true
        },
        "endTime": {
          "name": "endTime",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true
        },
        "createdBy": {
          "name": "createdBy",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "createdByName": {
          "name": "createdByName",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "createdAt": {
          "name": "createdAt",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "updatedAt": {
          "name": "updatedAt",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        }
      },
      "indexes": {},
      "foreignKeys": {
        "contest_createdBy_users_id_fk": {
          "name": "contest_createdBy_users_id_fk",
          "tableFrom": "contest",
          "tableTo": "users",
          "columnsFrom": [
            "createdBy"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.problem_moderators": {
      "name": "problem_moderators",
      "schema": "",
      "columns": {
        "problemId": {
          "name": "problemId",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "userId": {
          "name": "userId",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "assignedAt": {
          "name": "assignedAt",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        }
      },
      "indexes": {},
      "foreignKeys": {
        "problem_moderators_problemId_problem_id_fk": {
          "name": "problem_moderators_problemId_problem_id_fk",
          "tableFrom": "problem_moderators",
          "tableTo": "problem",
          "columnsFrom": [
            "problemId"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        },
        "problem_moderators_userId_users_id_fk": {
          "name": "problem_moderators_userId_users_id_fk",
          "tableFrom": "problem_moderators",
          "tableTo": "users",
          "columnsFrom": [
            "userId"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {
        "problem_moderators_problemId_userId_pk": {
          "name": "problem_moderators_problemId_userId_pk",
          "columns": [
            "problemId",
            "userId"
          ]
        }
      },
      "uniqueConstraints": {},
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.problem": {
      "name": "problem",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "gen_random_uuid()"
        },
        "title": {
          "name": "title",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "problemStatement": {
          "name": "problemStatement",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "inputFormat": {
          "name": "inputFormat",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "outputFormat": {
          "name": "outputFormat",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "constraints": {
          "name": "constraints",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "createdBy": {
          "name": "createdBy",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "createdByName": {
          "name": "createdByName",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "languages": {
          "name": "languages",
          "type": "text[]",
          "primaryKey": false,
          "notNull": true,
          "default": "'{\"cpp\",\"python\",\"java\",\"c\"}'"
        },
        "createdAt": {
          "name": "createdAt",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "updatedAt": {
          "name": "updatedAt",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        }
      },
      "indexes": {},
      "foreignKeys": {
        "problem_createdBy_users_id_fk": {
          "name": "problem_createdBy_users_id_fk",
          "tableFrom": "problem",
          "tableTo": "users",
          "columnsFrom": [
            "createdBy"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.submission": {
      "name": "submission",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "gen_random_uuid()"
        },
        "problemId": {
          "name": "problemId",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "userId": {
          "name": "userId",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "contestId": {
          "name": "contestId",
          "type": "uuid",
          "primaryKey": false,
          "notNull": false
        },
        "language": {
          "name": "language",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "code": {
          "name": "code",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "submittedAt": {
          "name": "submittedAt",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "verdict": {
          "name": "verdict",
          "type": "verdict_states",
          "typeSchema": "public",
          "primaryKey": false,
          "notNull": true,
          "default": "'pending'"
        },
        "score": {
          "name": "score",
          "type": "numeric(10, 2)",
          "primaryKey": false,
          "notNull": true,
          "default": "'0'"
        },
        "maxScore": {
          "name": "maxScore",
          "type": "numeric(10, 2)",
          "primaryKey": false,
          "notNull": true,
          "default": "'100'"
        },
        "executionTime": {
          "name": "executionTime",
          "type": "integer",
          "primaryKey": false,
          "notNull": false
        },
        "memoryUsage": {
          "name": "memoryUsage",
          "type": "integer",
          "primaryKey": false,
          "notNull": false
        },
        "compilationOutput": {
          "name": "compilationOutput",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "runtimeOutput": {
          "name": "runtimeOutput",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        }
      },
      "indexes": {},
      "foreignKeys": {
        "submission_problemId_problem_id_fk": {
          "name": "submission_problemId_problem_id_fk",
          "tableFrom": "submission",
          "tableTo": "problem",
          "columnsFrom": [
            "problemId"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        },
        "submission_userId_users_id_fk": {
          "name": "submission_userId_users_id_fk",
          "tableFrom": "submission",
          "tableTo": "users",
          "columnsFrom": [
            "userId"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        },
        "submission_contestId_contest_id_fk": {
          "name": "submission_contestId_contest_id_fk",
          "tableFrom": "submission",
          "tableTo": "contest",
          "columnsFrom": [
            "contestId"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.test_case": {
      "name": "test_case",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "gen_random_uuid()"
        },
        "problemId": {
          "name": "problemId",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "input": {
          "name": "input",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "output": {
          "name": "output",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "createdAt": {
          "name": "createdAt",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "updatedAt": {
          "name": "updatedAt",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        }
      },
      "indexes": {},
      "foreignKeys": {
        "test_case_problemId_problem_id_fk": {
          "name": "test_case_problemId_problem_id_fk",
          "tableFrom": "test_case",
          "tableTo": "problem",
          "columnsFrom": [
            "problemId"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.user_oauth_accounts": {
      "name": "user_oauth_accounts",
      "schema": "",
      "columns": {
        "userId": {
          "name": "userId",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "provider": {
          "name": "provider",
          "type": "oauth_provides",
          "typeSchema": "public",
          "primaryKey": false,
          "notNull": true
        },
        "providerAccountId": {
          "name": "providerAccountId",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "createdAt": {
          "name": "createdAt",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "updatedAt": {
          "name": "updatedAt",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        }
      },
      "indexes": {},
      "foreignKeys": {
        "user_oauth_accounts_userId_users_id_fk": {
          "name": "user_oauth_accounts_userId_users_id_fk",
          "tableFrom": "user_oauth_accounts",
          "tableTo": "users",
          "columnsFrom": [
            "userId"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {
        "user_oauth_accounts_providerAccountId_provider_pk": {
          "name": "user_oauth_accounts_providerAccountId_provider_pk",
          "columns": [
            "providerAccountId",
            "provider"
          ]
        }
      },
      "uniqueConstraints": {
        "user_oauth_accounts_providerAccountId_unique": {
          "name": "user_oauth_accounts_providerAccountId_unique",
          "nullsNotDistinct": false,
          "columns": [
            "providerAccountId"
          ]
        }
      },
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.users": {
      "name": "users",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "gen_random_uuid()"
        },
        "username": {
          "name": "username",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "name": {
          "name": "name",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "email": {
          "name": "email",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "password": {
          "name": "password",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "salt": {
          "name": "salt",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "role": {
          "name": "role",
          "type": "user_roles",
          "typeSchema": "public",
          "primaryKey": false,
          "notNull": true,
          "default": "'user'"
        },
        "createdAt": {
          "name": "createdAt",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "updatedAt": {
          "name": "updatedAt",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        }
      },
      "indexes": {},
      "foreignKeys": {},
      "compositePrimaryKeys": {},
      "uniqueConstraints": {
        "users_username_unique": {
          "name": "users_username_unique",
          "nullsNotDistinct": false,
          "columns": [
            "username"
          ]
        },
        "users_email_unique": {
          "name": "users_email_unique",
          "nullsNotDistinct": false,
          "columns": [
            "email"
          ]
        }
      },
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    }
  },
  "enums": {
    "public.oauth_provides": {
      "name": "oauth_provides",
      "schema": "public",
      "values": [
        "discord",
        "github",
        "google"
      ]
    },
    "public.user_roles": {
      "name": "user_roles",
      "schema": "public",
      "values": [
        "admin",
        "user"
      ]
    },
    "public.verdict_states": {
      "name": "verdict_states",
      "schema": "public",
      "values": [
        "pending",
        "accepted",
        "wrong_answer"
      ]
    }
  },
  "schemas": {},
  "sequences": {},
  "roles": {},
  "policies": {},
  "views": {},
  "_meta": {
    "columns": {},
    "schemas": {},
    "tables": {}
  }
}